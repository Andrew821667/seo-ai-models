    
    async def analyze_url(self, url: str, use_cache: bool = True) -> Dict[str, Any]:
        """
        Полный анализ URL с поддержкой SPA и AJAX.
        
        Args:
            url: URL для анализа
            use_cache: Использовать ли кэш
            
        Returns:
            Dict[str, Any]: Результаты анализа
        """
        # Проверяем кэш, если включен
        if use_cache and self.cache_enabled:
            cached_data, is_valid = self.get_from_cache(url)
            if cached_data and is_valid:
                return cached_data
        
        result = {
            "url": url,
            "success": False,
            "error": None
        }
        
        start_time = time.time()
        
        try:
            # Рендерим страницу
            html_content, ajax_data, is_spa = await self._render_page(url)
            
            if not html_content:
                result["error"] = "Failed to render page content"
                return result
            
            # Анализ типа сайта
            spa_info = self.detect_is_spa(html_content)
            
            # Извлечение контента
            content_data = self._extract_content(html_content, url)
            
            # Сбор результатов
            result.update({
                "success": True,
                "content": content_data,
                "site_type": {
                    "is_spa": spa_info["is_spa"] or is_spa,
                    "confidence": spa_info["confidence"],
                    "detected_frameworks": spa_info["detected_frameworks"]
                },
                "processing_time": time.time() - start_time
            })
            
            # Добавляем данные AJAX, если они есть
            if ajax_data:
                result["ajax_data"] = ajax_data
            
            # Сохраняем в кэш, если включен
            if use_cache and self.cache_enabled:
                self.save_to_cache(url, result)
            
        except Exception as e:
            logger.error(f"Ошибка при анализе {url}: {str(e)}")
            result["error"] = str(e)
            
        return result
